{"id":"../node_modules/@bikeshaving/crank/esm/dom.js","dependencies":[{"name":"/Users/josh/repos/personal/AMomentaryLapseOfSanity/node_modules/@bikeshaving/crank/esm/dom.js.map","includedInParent":true,"mtime":1588003918259},{"name":"/Users/josh/repos/personal/AMomentaryLapseOfSanity/package.json","includedInParent":true,"mtime":1588011300517},{"name":"/Users/josh/repos/personal/AMomentaryLapseOfSanity/node_modules/@bikeshaving/crank/package.json","includedInParent":true,"mtime":1588003918259},{"name":"./index-4b79835a.js","loc":{"line":1,"column":144},"parent":"/Users/josh/repos/personal/AMomentaryLapseOfSanity/node_modules/@bikeshaving/crank/esm/dom.js","resolved":"/Users/josh/repos/personal/AMomentaryLapseOfSanity/node_modules/@bikeshaving/crank/esm/index-4b79835a.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderer = exports.env = exports.DOMRenderer = void 0;\n\nvar _index4b79835a = require(\"./index-4b79835a.js\");\n\nvar _a; // TODO: create an allowlist/blocklist of props\n\n\nfunction updateProps(el, props, newProps) {\n  for (var name_1 in (0, _index4b79835a.g)((0, _index4b79835a.g)({}, props), newProps)) {\n    var value = props[name_1];\n    var newValue = newProps[name_1];\n\n    switch (true) {\n      case name_1 === \"children\":\n        break;\n\n      case name_1 === \"class\":\n      case name_1 === \"className\":\n        {\n          el[\"className\"] = newValue;\n          break;\n        }\n\n      case name_1 === \"style\" && \"style\" in el:\n        {\n          var style = el.style;\n\n          if (newValue == null) {\n            el.removeAttribute(\"style\");\n          } else if (typeof newValue === \"string\") {\n            style.cssText = newValue;\n          } else {\n            for (var styleName in Object.assign({}, value, newValue)) {\n              var styleValue = value && value[styleName];\n              var newStyleValue = newValue && newValue[styleName];\n\n              if (newStyleValue == null) {\n                style.removeProperty(styleName);\n              } else if (styleValue !== newStyleValue) {\n                style.setProperty(styleName, newStyleValue);\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          if (name_1 in el) {\n            el[name_1] = newValue;\n            break;\n          } else if (newValue === true) {\n            el.setAttribute(name_1, \"\");\n          } else if (newValue === false || newValue == null) {\n            el.removeAttribute(name_1);\n          } else {\n            el.setAttribute(name_1, newValue);\n          }\n\n          break;\n        }\n    }\n  }\n} // TODO: improve this algorithm\n// https://stackoverflow.com/questions/59418120/what-is-the-most-efficient-way-to-update-the-childnodes-of-a-dom-node-with-an-ar\n\n\nfunction updateChildren(el, children) {\n  var e_1, _a, e_2, _b;\n\n  if (el.childNodes.length === 0) {\n    var fragment = document.createDocumentFragment();\n\n    try {\n      for (var children_1 = (0, _index4b79835a.f)(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n\n        if (typeof child === \"string\") {\n          child = document.createTextNode(child);\n        }\n\n        fragment.appendChild(child);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    el.appendChild(fragment);\n    return;\n  }\n\n  var oldChild = el.firstChild;\n\n  try {\n    for (var children_2 = (0, _index4b79835a.f)(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n      var newChild = children_2_1.value;\n\n      if (oldChild === null) {\n        el.appendChild(typeof newChild === \"string\" ? document.createTextNode(newChild) : newChild);\n      } else if (typeof newChild === \"string\") {\n        if (oldChild.nodeType === Node.TEXT_NODE) {\n          if (oldChild.nodeValue !== newChild) {\n            oldChild.nodeValue = newChild;\n          }\n\n          oldChild = oldChild.nextSibling;\n        } else {\n          el.insertBefore(document.createTextNode(newChild), oldChild);\n        }\n      } else if (oldChild !== newChild) {\n        el.insertBefore(newChild, oldChild);\n      } else {\n        oldChild = oldChild.nextSibling;\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (children_2_1 && !children_2_1.done && (_b = children_2.return)) _b.call(children_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  while (oldChild !== null) {\n    var nextSibling = oldChild.nextSibling;\n    el.removeChild(oldChild);\n    oldChild = nextSibling;\n  }\n}\n\nfunction createDocumentFragmentFromHTML(html) {\n  if (typeof document.createRange === \"function\") {\n    return document.createRange().createContextualFragment(html);\n  } else {\n    var fragment = document.createDocumentFragment();\n    var childNodes = new DOMParser().parseFromString(html, \"text/html\").body.childNodes;\n\n    for (var i = 0; i < childNodes.length; i++) {\n      fragment.appendChild(childNodes[i]);\n    }\n\n    return fragment;\n  }\n} // TODO: Element should be ParentNode maybe?\n\n\nvar env = (_a = {}, _a[_index4b79835a.D] = function (tag) {\n  return function defaultDOM() {\n    var node, props, nextProps, children, nextChildren, _a, _b, _c, e_3_1;\n\n    var e_3, _d;\n\n    return (0, _index4b79835a._)(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          node = document.createElement(tag);\n          props = {};\n          children = [];\n          _e.label = 1;\n\n        case 1:\n          _e.trys.push([1, 6, 7, 8]);\n\n          _a = (0, _index4b79835a.f)(this), _b = _a.next();\n          _e.label = 2;\n\n        case 2:\n          if (!!_b.done) return [3\n          /*break*/\n          , 5];\n          _c = _b.value;\n          nextChildren = _c.children, nextProps = (0, _index4b79835a.e)(_c, [\"children\"]);\n          updateProps(node, props, nextProps);\n          props = nextProps;\n\n          if (!(\"innerHTML\" in nextProps) && (children.length > 0 || nextChildren.length > 0)) {\n            updateChildren(node, nextChildren);\n            children = nextChildren;\n          }\n\n          return [4\n          /*yield*/\n          , node];\n\n        case 3:\n          _e.sent();\n\n          _e.label = 4;\n\n        case 4:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 2];\n\n        case 5:\n          return [3\n          /*break*/\n          , 8];\n\n        case 6:\n          e_3_1 = _e.sent();\n          e_3 = {\n            error: e_3_1\n          };\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          try {\n            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n}, _a[_index4b79835a.R] = function (_a) {\n  var value = _a.value;\n\n  if (typeof value === \"string\") {\n    // TODO: figure out what the type of element should actually be\n    return createDocumentFragmentFromHTML(value);\n  } else {\n    return value;\n  }\n}, _a[_index4b79835a.P] = function (_a) {\n  var _b, _c, _d, newRoot, children, e_4_1;\n\n  var e_4, _e;\n\n  var root = _a.root;\n  return (0, _index4b79835a._)(this, function (_f) {\n    switch (_f.label) {\n      case 0:\n        if (root == null) {\n          throw new TypeError(\"Portal element is missing root node\");\n        }\n\n        _f.label = 1;\n\n      case 1:\n        _f.trys.push([1,, 10, 11]);\n\n        _f.label = 2;\n\n      case 2:\n        _f.trys.push([2, 7, 8, 9]);\n\n        _b = (0, _index4b79835a.f)(this), _c = _b.next();\n        _f.label = 3;\n\n      case 3:\n        if (!!_c.done) return [3\n        /*break*/\n        , 6];\n        _d = _c.value, newRoot = _d.root, children = _d.children;\n\n        if (newRoot == null) {\n          throw new TypeError(\"Portal element is missing root node\");\n        }\n\n        if (root !== newRoot) {\n          updateChildren(root, []);\n          root = newRoot;\n        }\n\n        updateChildren(root, children);\n        return [4\n        /*yield*/\n        , root];\n\n      case 4:\n        _f.sent();\n\n        _f.label = 5;\n\n      case 5:\n        _c = _b.next();\n        return [3\n        /*break*/\n        , 3];\n\n      case 6:\n        return [3\n        /*break*/\n        , 9];\n\n      case 7:\n        e_4_1 = _f.sent();\n        e_4 = {\n          error: e_4_1\n        };\n        return [3\n        /*break*/\n        , 9];\n\n      case 8:\n        try {\n          if (_c && !_c.done && (_e = _b.return)) _e.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 9:\n        return [3\n        /*break*/\n        , 11];\n\n      case 10:\n        updateChildren(root, []);\n        return [7\n        /*endfinally*/\n        ];\n\n      case 11:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}, _a);\nexports.env = env;\n\nvar DOMRenderer =\n/** @class */\nfunction (_super) {\n  (0, _index4b79835a.d)(DOMRenderer, _super);\n\n  function DOMRenderer() {\n    return _super.call(this, env) || this;\n  }\n\n  return DOMRenderer;\n}(_index4b79835a.b);\n\nexports.DOMRenderer = DOMRenderer;\nvar renderer = new DOMRenderer();\nexports.renderer = renderer;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"f0f85b1290072ede61c458f147d801f7","cacheData":{"env":{}}}